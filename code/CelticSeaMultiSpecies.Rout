
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # Install TMB
> # Must be installed from: https://github.com/kaskr/adcomp
> 
> # Install INLA
> # Must be installed from: http://www.r-inla.org/download
> 
> # Install geostatistical delta-GLMM package
> if(!"VAST" %in% installed.packages()[,1]) devtools::install_github("james-thorson/VAST")
> if(!"ThorsonUtilities" %in% installed.packages()[,1]) devtools::install_github("james-thorson/utilities")
> # if(!"FishData" %in% installed.packages()[,1]) devtools::install_github("james-thorson/FishData")
> 
> # setwd("C:/Users/James.Thorson/Desktop/Project_git/VAST/examples/")
> 
> # Load libraries
> library(TMB)
> library(ThorsonUtilities)
> library(VAST)
###########################################################################################
Loading package VAST, developed by James Thorson for the Northwest Fisheries Science Center
For details and citation guidance, please see http://github.com/james-thorson/VAST/
###########################################################################################
> 
> # This is where all runs will be located
> DateFile = paste(getwd(),'/',Sys.Date(),'CelticSeaSurvey/',sep='')
>   dir.create(DateFile)
> 
> ###############
> # Settings
> ###############
> 
>   Version = "VAST_v1_8_0"
>   Method = c("Grid", "Mesh")[2]
>   grid_size_km = 20 
>   n_x = c(100, 250, 500, 1000, 2000)[1] # Number of stations
>   FieldConfig = c("Omega1"=6, "Epsilon1"=6, "Omega2"=6, "Epsilon2"=6) # 1=Presence-absence; 2=Density given presence; #Epsilon=Spatio-temporal; #Omega=Spatial
>   RhoConfig = c("Beta1"=0, "Beta2"=0, "Epsilon1"=0, "Epsilon2"=0) # Structure for beta or epsilon over time: 0=None (default); 1=WhiteNoise; 2=RandomWalk; 3=Constant
>   VesselConfig = c("Vessel"=0, "VesselYear"=1)
>   ObsModel = c(2,0)  # 0=normal (log-link); 1=lognormal; 2=gamma; 4=ZANB; 5=ZINB; 11=lognormal-mixture; 12=gamma-mixture
>   OverdispersionConfig = c("eta1" = 6,"eta2" = 6)
>   Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )     # Samples: Do K-means on trawl locs; Domain: Do K-means on extrapolation grid
>   BiasCorr = FALSE 
> 
>   # Determine region
>   Region = "Celtic_Sea"
>   Catch_units <- 'Kg'
> 
> 
>   # Decide on strata for use when calculating indices
>   strata.limits <- data.frame('STRATA'="All_areas")
> 
>   # Save options for future records
>   Record = ThorsonUtilities::bundlelist( c("Version","Method","grid_size_km","n_x","FieldConfig","RhoConfig","VesselConfig","ObsModel", "OverdispersionConfig", "Kmeans_Config","Catch_units","BiasCorr","Region","strata.limits") )
>   capture.output( Record, file=paste0(DateFile,"Record.txt"))
>   save(Record, file=paste0(DateFile,"Record.RData"))
> 
> ################
> # Prepare data
> # (THIS WILL VARY FOR DIFFERENT DATA SETS) 
> ################
> 
>   # Read or simulate trawl data
>   load(file.path('..','data','CelticSurveyFormattedSize.RData')) ## EVHOE and IE-IGFS
>   load(file.path('..','data','CelticSurvey2FormattedSize.RData')) ## Various Cefas surveys
> 
>   # Combine the survey data
>   DF$SpeciesName <- toupper(DF$SpeciesName)
>   FSS$fldScientificName <- toupper(FSS$fldScientificName)
> 
>   DF2 <- DF
> 
>   ac <- as.character
>   DF <- data.frame(Survey        = c(DF2$Ship,        ac(FSS$fldSeriesName)),
+ 		   Year          = c(DF2$Year,        ac(FSS$Year)),
+ 		   Station       = c(DF2$StNo,        FSS$fldCruiseStationNumber),
+ 		   Lat           = c(DF2$HaulLatMid,  FSS$HaulLatMid),
+ 		   Lon           = c(DF2$HaulLonMid,  FSS$HaulLonMid),
+ 		   AreaSwept_km2 = c(DF2$SweptArea,   FSS$SweptArea),
+ 		   spp           = c(DF2$SpeciesName, ac(FSS$fldScientificName)),
+ 		   Kg            = c(DF2$Kg,          FSS$Kg))
> 
>  table(DF$Survey, DF$Year)		   
            
             1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994
  CARLHELMAR    0    0    0    0    0    0    0  359  385  293  300  312  332
  CEXP          0    0    0    0    0    0    0    0    0    0    0    0    0
  NWGFS         0    0    0    0    0    0  179  332  242  461  471 1300 1412
  Q1SWBEAM      0    0    0    0    0    0    0    0    0    0    0    0    0
  Q4SWIBTS      0    0    0    0    0    0    0    0    0    0    0    0    0
  THA2          0    0    0    0    0    0    0    0    0    0    0    0    0
  WCGFS       646  425  757 1114 1149 1371 1447  861  883 1709 1503  989  582
            
             1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007
  CARLHELMAR  323  327  364  369  343  364  380  618 1110  775  391  424  417
  CEXP          0    0    0    0    0    0    0    0 1205 1374 1466 1673 1779
  NWGFS       763  898 1162  932  583  445  493  571  557  596  604  585  619
  Q1SWBEAM      0    0    0    0    0    0    0    0    0    0    0  829  914
  Q4SWIBTS      0    0    0    0    0    0    0    0  528  888  639  331  776
  THA2          0    0  872 1161 1082  901 1652 1571 1541 1287 1331 1161 1494
  WCGFS      1031  995 1077  851  901  907  845 1033  857  725    0    0    0
            
             2008 2009 2010 2011 2012 2013 2014 2015 2016
  CARLHELMAR  420  429  522  456  380  435    0    0    0
  CEXP       1887 1730 2306 2245 2059 2124 2232 1832    0
  NWGFS       534  602  584  604  618  645  655  613    0
  Q1SWBEAM   1050  961 1236 1259 1023 1844 1682 1916 1999
  Q4SWIBTS    724  714  939  787    0    0    0    0    0
  THA2       1394 1236 1312 1556 1242 1292 1383 1236    0
  WCGFS         0    0    0    0    0    0    0    0    0
> 
>  sort(unique(DF$spp)) 
  [1] AGONUS CATAPHRACTUS_ALL          ALOSA ALOSA_ALL                 
  [3] ALOSA FALLAX_ALL                 AMBLYRAJA RADIATA_ALL           
  [5] AMMODYTES_ALL                    AMMODYTES MARINUS_ALL           
  [7] AMMODYTES TOBIANUS_ALL           AMMODYTIDAE_ALL                 
  [9] ANGUILLA ANGUILLA_ALL            APHIA MINUTA_ALL                
 [11] ARGENTINA SILUS_ALL              ARGENTINA SPHYRAENA_ALL         
 [13] ARNOGLOSSUS LATERNA_ALL          ASPITRIGLA CUCULUS_ALL          
 [15] ATHERINA PRESBYTER_ALL           BELONE BELONE_ALL               
 [17] BOOPS BOOPS_ALL                  BRAMA BRAMA_ALL                 
 [19] BUCCINUM UNDATUM_ALL             BUENIA JEFFREYSII_ALL           
 [21] BUGLOSSIDIUM LUTEUM_ALL          CALLIONYMIDAE_ALL               
 [23] CALLIONYMUS LYRA_ALL             CALLIONYMUS MACULATUS_ALL       
 [25] CALLIONYMUS RETICULATUS_ALL      CANCER PAGURUS_ALL              
 [27] CAPROS APER_ALL                  CEPOLA RUBESCENS_ALL            
 [29] CHIMAERA MONSTROSA_ALL           CILIATA MUSTELA_ALL             
 [31] CILIATA SEPTENTRIONALIS_ALL      CLUPEA HARENGUS_ALL             
 [33] CYCLOPTERUS LUMPUS_ALL           DASYATIS PASTINACA_ALL          
 [35] DICENTRARCHUS LABRAX_ADU         DICENTRARCHUS LABRAX_ALL        
 [37] DIPLECOGASTER BIMACULATA_ALL     ECHIICHTHYS VIPERA_ALL          
 [39] ENCHELYOPUS CIMBRIUS_ALL         ENGRAULIS ENCRASICOLUS_ALL      
 [41] ENTELURUS AEQUOREUS_ALL          EUTRIGLA GURNARDUS_ALL          
 [43] GADICULUS ARGENTEUS_ALL          GADUS MORHUA_ADU                
 [45] GADUS MORHUA_JUV                 GAIDROPSARUS VULGARIS_ALL       
 [47] GALEORHINUS GALEUS_ALL           GLYPTOCEPHALUS CYNOGLOSSUS_ALL  
 [49] GOBIIDAE_ALL                     GOBIUS_ALL                      
 [51] GOBIUS NIGER_ALL                 HELICOLENUS DACTYLOPTERUS_ALL   
 [53] HIPPOGLOSSOIDES PLATESSOIDES_ALL HYPEROPLUS IMMACULATUS_ALL      
 [55] HYPEROPLUS LANCEOLATUS_ALL       LABRIDAE_ALL                    
 [57] LABRUS BERGYLTA_ALL              LAMNA NASUS_ALL                 
 [59] LEPIDORHOMBUS WHIFFIAGONIS_ADU   LEPIDORHOMBUS WHIFFIAGONIS_JUV  
 [61] LESUEURIGOBIUS FRIESII_ALL       LEUCORAJA NAEVUS_ALL            
 [63] LIMANDA LIMANDA_ALL              LIPARIS LIPARIS_ALL             
 [65] LIZA RAMADA_ALL                  LOPHIUS PISCATORIUS_ALL         
 [67] LUMPENUS LAMPRETAEFORMIS_ALL     MELANOGRAMMUS AEGLEFINUS_ADU    
 [69] MELANOGRAMMUS AEGLEFINUS_JUV     MERLANGIUS MERLANGUS_ADU        
 [71] MERLANGIUS MERLANGUS_JUV         MERLUCCIUS MERLUCCIUS_ADU       
 [73] MERLUCCIUS MERLUCCIUS_JUV        MICROCHIRUS VARIEGATUS_ALL      
 [75] MICROMESISTIUS POUTASSOU_ALL     MICROSTOMUS KITT_ALL            
 [77] MOLA MOLA_ALL                    MOLVA MOLVA_ALL                 
 [79] MUGILIDAE_ALL                    MULLUS_ALL                      
 [81] MULLUS SURMULETUS_ALL            MUSTELUS ASTERIAS_ALL           
 [83] MUSTELUS MUSTELUS_ALL            MYOXOCEPHALUS SCORPIUS_ALL      
 [85] MYXINE GLUTINOSA_ALL             NECORA PUBER_ALL                
 [87] NEPHROPS NORVEGICUS_ALL          PAGRUS PAGRUS_ALL               
 [89] PHOLIS GUNNELLUS_ALL             PHYCIS BLENNOIDES_ALL           
 [91] PLATICHTHYS FLESUS_ALL           PLEURONECTES PLATESSA_ADU       
 [93] PLEURONECTES PLATESSA_JUV        POLLACHIUS POLLACHIUS_ALL       
 [95] POLLACHIUS VIRENS_ADU            POMATOSCHISTUS MICROPS_ALL      
 [97] POMATOSCHISTUS MINUTUS_ALL       POMATOSCHISTUS PICTUS_ALL       
 [99] PSETTA MAXIMA_ALL                RAJA BRACHYURA_ALL              
[101] RAJA CLAVATA_ALL                 RAJA MONTAGUI_ALL               
[103] RAJIDAE_ALL                      RANICEPS RANINUS_ALL            
[105] SALMO SALAR_ALL                  SALMO TRUTTA_ALL                
[107] SARDINA PILCHARDUS_ALL           SCOMBERESOX SAURUS_ALL          
[109] SCOMBER SCOMBRUS_ALL             SCOPHTHALMUS RHOMBUS_ALL        
[111] SCYLIORHINUS CANICULA_ALL        SEBASTES VIVIPARUS_ALL          
[113] SEPIOLA ATLANTICA_ALL            SOLEA SOLEA_ADU                 
[115] SOLEA SOLEA_JUV                  SPONDYLIOSOMA CANTHARUS_ALL     
[117] SPRATTUS SPRATTUS_ALL            SQUALUS ACANTHIAS_ALL           
[119] SYNGNATHIDAE_ALL                 SYNGNATHUS ACUS_ALL             
[121] SYNGNATHUS ROSTELLATUS_ALL       TORPEDO NOBILIANA_ALL           
[123] TRACHINUS DRACO_ALL              TRACHURUS TRACHURUS_ALL         
[125] TRIGLA LUCERNA_ALL               TRISOPTERUS ESMARKII_ALL        
[127] TRISOPTERUS LUSCUS_ALL           TRISOPTERUS MINUTUS_ALL         
[129] ZEUGOPTERUS PUNCTATUS_ALL        ZEUS FABER_ALL                  
[131] ZOARCES VIVIPARUS_ALL           
131 Levels: AGONUS CATAPHRACTUS_ALL ALOSA ALOSA_ALL ... ZOARCES VIVIPARUS_ALL
> 
> #  DF <- DF[(DF$spp %in% c('GADUS MORHUA',
> #			  'MELANOGRAMMUS AEGLEFINUS',
> #			  'MERLANGIUS MERLANGUS')),]
> 			 # 'MERLUCCIUS MERLUCCIUS',
> 			 # 'LOPHIUS PISCATORIUS',
> 			 # 'LEPIDORHOMBUS WHIFFIAGONIS')),]
> 
> ## At size
>  DF <- DF[(DF$spp %in% c('GADUS MORHUA_JUV',
+ 			 'GADUS MORHUA_ADU',
+ 			 'MELANOGRAMMUS AEGLEFINUS_JUV',
+ 			 'MELANOGRAMMUS AEGLEFINUS_ADU',
+ 		         'MERLANGIUS MERLANGUS_JUV',		 
+ 			 'MERLANGIUS MERLANGUS_ADU')),]
> 
> # Trim years
>   DF <- DF[(DF$Year %in% c(1990:2015)),]
>   
>   ## Add missing zeros
>   DF <- reshape2::dcast(DF, Survey + Year + Station + Lat + Lon + AreaSwept_km2 ~ spp, value.var = 'Kg', fill = 0)
>   DF <- reshape2::melt(DF, id = c('Survey','Year','Station','Lat','Lon','AreaSwept_km2'), value.name = 'Kg')
>   colnames(DF)[7] <- 'spp'
> 
>   DF$SpeciesName <- factor(DF$spp) # drop empty factors
>   DF$Ship        <- as.factor(DF$Survey)
>   DF$Year        <- as.factor(DF$Year)
> 
>   # Remove some surveys
>   # DF <- DF[DF$Survey %in% c('CEXP','THA2','WCGFS','Q1SWIBTS','Q1SWBEAM'),]
> 
>   an <- as.numeric
>   Data_Geostat = cbind("spp"=DF[,"SpeciesName"], 
+ 		       "Year"=DF[,"Year"], 
+ 		       "Catch_KG"=DF[,"Kg"], 
+ 		       "AreaSwept_km2"=DF[,'AreaSwept_km2'], 
+ 		       "Vessel"= DF[,'Ship'] ,
+ 		       "Lat"=DF[,"Lat"], 
+ 		       "Lon"=DF[,"Lon"] )
>   save(Data_Geostat, file=paste0(DateFile,"Data_Geostat.RData"))
> 
>   # Get extrapolation data
>   Extrapolation_List = SpatialDeltaGLMM::Prepare_Extrapolation_Data_Fn( Region=Region, strata.limits=strata.limits, observations_LL=Data_Geostat[,c('Lat','Lon')], maximum_distance_from_sample = 10)
convUL: For the UTM conversion, automatically detected zone 29.
convUL: Converting coordinates within the northern hemisphere.
convUL: Converting coordinates within the northern hemisphere.
> 
>   # Calculate spatial information for SPDE mesh, strata areas, and AR1 process
>   Spatial_List = SpatialDeltaGLMM::Spatial_Information_Fn( grid_size_km=grid_size_km, n_x=n_x, Method=Method, Lon=Data_Geostat[,'Lon'], Lat=Data_Geostat[,'Lat'], Extrapolation_List=Extrapolation_List, randomseed=Kmeans_Config[["randomseed"]], nstart=Kmeans_Config[["nstart"]], iter.max=Kmeans_Config[["iter.max"]], DirPath=DateFile )
convUL: Converting coordinates within the northern hemisphere.
convUL: For the UTM conversion, used zone 29 as specified
Num=1 Current_Best=Inf New=8918298.7
Num=2 Current_Best=8918298.7 New=7351821.7
Num=3 Current_Best=7351821.7 New=7730908.8
Num=4 Current_Best=7351821.7 New=7481170.2
Num=5 Current_Best=7351821.7 New=7225340.1
Num=6 Current_Best=7225340.1 New=7486402.9
Num=7 Current_Best=7225340.1 New=6346776.3
Num=8 Current_Best=6346776.3 New=7289301.4
Num=9 Current_Best=6346776.3 New=6841157.3
Num=10 Current_Best=6346776.3 New=7058124
Num=11 Current_Best=6346776.3 New=6771174.3
Num=12 Current_Best=6346776.3 New=8082814.5
Num=13 Current_Best=6346776.3 New=7570269.4
Num=14 Current_Best=6346776.3 New=7083179.6
Num=15 Current_Best=6346776.3 New=7238611.1
Num=16 Current_Best=6346776.3 New=7884294.1
Num=17 Current_Best=6346776.3 New=8212371.1
Num=18 Current_Best=6346776.3 New=8337033
Num=19 Current_Best=6346776.3 New=7732610.5
Num=20 Current_Best=6346776.3 New=8095169.3
Num=21 Current_Best=6346776.3 New=8164211.3
Num=22 Current_Best=6346776.3 New=8346115.7
Num=23 Current_Best=6346776.3 New=7810495.4
Num=24 Current_Best=6346776.3 New=7638237.6
Num=25 Current_Best=6346776.3 New=7278312.4
Num=26 Current_Best=6346776.3 New=7644927.6
Num=27 Current_Best=6346776.3 New=7554641.6
Num=28 Current_Best=6346776.3 New=7379536.8
Num=29 Current_Best=6346776.3 New=9389005.9
Num=30 Current_Best=6346776.3 New=8420739.8
Num=31 Current_Best=6346776.3 New=7923943.6
Num=32 Current_Best=6346776.3 New=6941757.8
Num=33 Current_Best=6346776.3 New=8159886.8
Num=34 Current_Best=6346776.3 New=7250362.6
Num=35 Current_Best=6346776.3 New=7213573.9
Num=36 Current_Best=6346776.3 New=7779499.8
Num=37 Current_Best=6346776.3 New=6903885.5
Num=38 Current_Best=6346776.3 New=7997783.4
Num=39 Current_Best=6346776.3 New=6775994.6
Num=40 Current_Best=6346776.3 New=6935114.9
Num=41 Current_Best=6346776.3 New=8567094.6
Num=42 Current_Best=6346776.3 New=7435182.5
Num=43 Current_Best=6346776.3 New=6846765.2
Num=44 Current_Best=6346776.3 New=6935729.3
Num=45 Current_Best=6346776.3 New=6972324.5
Num=46 Current_Best=6346776.3 New=7520108.7
Num=47 Current_Best=6346776.3 New=7259435.3
Num=48 Current_Best=6346776.3 New=7319827.3
Num=49 Current_Best=6346776.3 New=8530659.8
Num=50 Current_Best=6346776.3 New=7418492.6
Num=51 Current_Best=6346776.3 New=8088418.3
Num=52 Current_Best=6346776.3 New=8231912.6
Num=53 Current_Best=6346776.3 New=8274723.7
Num=54 Current_Best=6346776.3 New=7725163.3
Num=55 Current_Best=6346776.3 New=8712478.2
Num=56 Current_Best=6346776.3 New=7491283.9
Num=57 Current_Best=6346776.3 New=7741760.4
Num=58 Current_Best=6346776.3 New=7252395.9
Num=59 Current_Best=6346776.3 New=8281627.1
Num=60 Current_Best=6346776.3 New=7948969.5
Num=61 Current_Best=6346776.3 New=7743859.1
Num=62 Current_Best=6346776.3 New=7455063.9
Num=63 Current_Best=6346776.3 New=8359111.2
Num=64 Current_Best=6346776.3 New=7681272.9
Num=65 Current_Best=6346776.3 New=6973075.4
Num=66 Current_Best=6346776.3 New=6881637.1
Num=67 Current_Best=6346776.3 New=7311874.8
Num=68 Current_Best=6346776.3 New=7981542.4
Num=69 Current_Best=6346776.3 New=8028378.1
Num=70 Current_Best=6346776.3 New=7106190.7
Num=71 Current_Best=6346776.3 New=7272676.5
Num=72 Current_Best=6346776.3 New=10414030.4
Num=73 Current_Best=6346776.3 New=7707931.8
Num=74 Current_Best=6346776.3 New=6986592.4
Num=75 Current_Best=6346776.3 New=9144105.9
Num=76 Current_Best=6346776.3 New=8248968.3
Num=77 Current_Best=6346776.3 New=7123990.3
Num=78 Current_Best=6346776.3 New=6913142.6
Num=79 Current_Best=6346776.3 New=8002465.1
Num=80 Current_Best=6346776.3 New=7314821.9
Num=81 Current_Best=6346776.3 New=7424217.5
Num=82 Current_Best=6346776.3 New=6716069.1
Num=83 Current_Best=6346776.3 New=7389026
Num=84 Current_Best=6346776.3 New=8401741.4
Num=85 Current_Best=6346776.3 New=7525381.9
Num=86 Current_Best=6346776.3 New=8444634.8
Num=87 Current_Best=6346776.3 New=7500362.7
Num=88 Current_Best=6346776.3 New=7298175.9
Num=89 Current_Best=6346776.3 New=7866100.9
Num=90 Current_Best=6346776.3 New=7761111.9
Num=91 Current_Best=6346776.3 New=7966525.7
Num=92 Current_Best=6346776.3 New=7752314.2
Num=93 Current_Best=6346776.3 New=7373932.5
Num=94 Current_Best=6346776.3 New=7743127.4
Num=95 Current_Best=6346776.3 New=7634065.9
Num=96 Current_Best=6346776.3 New=7319796
Num=97 Current_Best=6346776.3 New=7718500.4
Num=98 Current_Best=6346776.3 New=7769488.4
Num=99 Current_Best=6346776.3 New=7115089.2
Num=100 Current_Best=6346776.3 New=8105799.2
Calculated and saved to /home/paul/Dropbox/MARES PhD/CS_Geo/code/2016-10-05CelticSeaSurvey//Kmeans-100.RData
>   Data_Geostat = cbind( Data_Geostat, Spatial_List$loc_UTM, "knot_i"=Spatial_List$knot_i )
> 
> ################
> # Make and Run TMB model
> # (THIS WILL BE SIMILAR FOR EVERY DATA SET) 
> ################
> 
>   # Make TMB data list
>   TmbData = Data_Fn("Version"=Version, "FieldConfig"=FieldConfig, "RhoConfig"=RhoConfig, "ObsModel"=ObsModel, "OverdispersionConfig" = OverdispersionConfig, "c_i"=as.numeric(Data_Geostat[,'spp'])-1, "b_i"=Data_Geostat[,'Catch_KG'], "a_i"=Data_Geostat[,'AreaSwept_km2'], "v_i"=as.numeric(Data_Geostat[,'Vessel'])-1, "s_i"=Data_Geostat[,'knot_i']-1, "t_i"=Data_Geostat[,'Year'], "a_xl"=Spatial_List$a_xl, "MeshList"=Spatial_List$MeshList, "GridList"=Spatial_List$GridList, "Method"=Spatial_List$Method )
FieldConfig_input is:
  Omega1 Epsilon1   Omega2 Epsilon2 
       6        6        6        6 
OverdispersionConfig_input is:
eta1 eta2 
   6    6 
> 
>   # Make TMB object
>   #dyn.unload( paste0(DateFile,"/",dynlib(TMB:::getUserDLL())) )
>   TmbList = Build_TMB_Fn("TmbData"=TmbData, "RunDir"=DateFile, "Version"=Version, "RhoConfig"=RhoConfig, "loc_x"=Spatial_List$loc_x)
g++ -I/usr/share/R/include -DNDEBUG -I/home/paul/R/x86_64-pc-linux-gnu-library/3.3/TMB/include   -DTMB_SAFEBOUNDS -DLIB_UNLOAD=R_unload_VAST_v1_8_0  -DTMB_LIB_INIT=R_init_VAST_v1_8_0     -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c VAST_v1_8_0.cpp -o VAST_v1_8_0.o
g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o VAST_v1_8_0.so VAST_v1_8_0.o -L/usr/lib/R/lib -lR
Constructing atomic D_lgamma
Constructing atomic D_lgamma
Number of fixed and random effects:

         beta1_ct          beta2_ct Epsiloninput1_sft Epsiloninput2_sft 
              156               156             18096             18096 
          eta1_vf           eta2_vf              L1_z              L2_z 
               42                42                21                21 
     L_epsilon1_z      L_epsilon2_z        ln_H_input         logkappa1 
               21                21                 2                 1 
        logkappa2         logSigmaM        L_omega1_z        L_omega2_z 
                1                 6                21                21 
   Omegainput1_sf    Omegainput2_sf 
              696               696 
>   Obj = TmbList[["Obj"]]
> 
>   # Run model
>   Opt = TMBhelper::Optimize( obj=Obj, lower=TmbList[["Lower"]], upper=TmbList[["Upper"]], getsd=TRUE, savedir=DateFile, bias.correct=BiasCorr )
Constructing atomic D_lgamma
Optimizing tape... Done
iter: 1  value: 95033.05 mgc: 2671.375 ustep: 0.002237842 
iter: 2  value: 84804.22 mgc: 2070.751 ustep: 0.003029266 
iter: 3  value: 79396.84 mgc: 1556.6 ustep: 0.003536765 
iter: 4  value: 73587.17 mgc: 1709.929 ustep: 0.001916337 
iter: 5  value: 71207.09 mgc: 867.8663 ustep: 0.00279889 
iter: 6  value: 70176.45 mgc: 410 ustep: 0.05299925 
iter: 7  value: 69309.93 mgc: 257.4411 ustep: 0.2302926 
iter: 8  value: 68784.07 mgc: 15.22135 ustep: 0.4799402 
iter: 9  value: 68744.28 mgc: 17.78492 ustep: 0.6928079 
iter: 10  value: 68742.96 mgc: 1.16982 ustep: 0.8323676 
iter: 11  value: 68742.94 mgc: 0.100995 ustep: 0.9123506 
iter: 12  value: 68742.94 mgc: 0.007409687 ustep: 0.9551749 
iter: 13  value: 68742.94 mgc: 0.0002954754 ustep: 0.9773328 
iter: 14  value: 68742.94 mgc: 6.02152e-06 ustep: 0.9886026 
iter: 15  value: 68742.94 mgc: 6.180397e-08 ustep: 0.9942855 
iter: 16  mgc: 3.179474e-10 
iter: 1  mgc: 3.179474e-10 
Matching hessian patterns... Done
outer mgc:  4638.834 
  0:     103395.11:  0.00000  0.00000 -5.55876 -7.81349 -6.30800 -6.71407 -4.97379 -5.36689 -5.60649 -7.31424 -6.55972 -6.09626 -4.99313 -4.95651 -5.93217 -7.17082 -6.80275 -6.27589 -5.08598 -5.05841 -5.78894 -7.10686 -7.01977 -5.78894 -5.19598 -4.94460 -6.10106 -5.99904 -6.29817 -5.82163 -5.11201 -4.84268 -5.69123 -6.15679 -6.41510 -5.55722 -5.16673 -5.23732 -5.94606 -6.98920 -5.68746 -5.53929 -5.12530 -4.88252 -5.73258 -6.88469 -5.63694 -5.95637 -5.12374 -5.12374 -5.67847 -7.57222 -5.93596 -6.15354 -5.22798 -5.06089 -5.98502 -7.00519 -5.95755 -5.55987 -5.34679 -5.13436 -6.15903 -6.64535 -5.75251 -5.32002 -5.30341 -5.33690 -5.91624 -6.92347 -5.77927 -5.36515 -5.48523 -5.05141 -6.11391 -8.57266 -5.37639 -5.05997 -5.54041 -5.21168 -6.12717 -10.1366 -5.19669 -5.11340 -5.01205 -5.23352 -6.13037 -7.64619 -5.09683 -5.14843 -5.17914 -5.21889 -5.75488 -7.35003 -5.25566 -5.10212 -5.26608 -5.24535 -6.14014 -7.33789 -5.37709 -5.35548 -5.27340 -5.12689 -5.86307 -7.61462 -5.31599 -5.23489 -5.12427 -5.18918 -6.04547 -8.72182 -5.25102 -5.30755 -5.19007 -5.21250 -6.24073 -7.19290 -5.29447 -4.93208 -5.16134 -5.03679 -5.62837 -6.15013 -5.11324 -4.97036 -5.15383 -5.24025 -5.45939 -7.54255 -4.97122 -5.19816 -5.18015 -5.33412 -5.76558 -9.94305 -5.06158 -5.58263 -5.17528 -5.33311 -6.21523 -7.11435 -5.29593 -5.23807 -5.29593 -5.08203 -5.77135 -6.44132 -5.14674 -5.04411 -5.03199 -5.04411 -6.01109 -9.04194 -5.04667 -5.18634 -5.20796 -5.29146 0.210666 0.659661 0.221632 0.630590 0.792622  1.12084 -2.24061  1.25302 0.0962661 0.0302601 -1.19445 0.275560 -0.109716 -0.661161  1.45087 -1.28200 -0.0424256  2.17079 -0.166844 -2.17091  1.22511 0.415211 -0.767938 0.746323 -1.06135 0.511121 0.731106 0.382665 -2.02502 0.575180 -1.00387 0.219666 0.582024  1.25433 -0.567176  1.10264 -1.60069 0.198672  1.18020 -0.473028 0.936616 0.762959 -0.354816 0.773580 -1.11382  1.51082 -0.564196 0.271880 0.974069 -1.23940 -1.23338 0.441329 0.791542 -1.46021 -0.227967 -0.269803 -1.64324 0.632744 -0.260817 -1.29052 0.0533669 0.278920 0.132774 -1.02482  3.26709  1.75497  6.32169  2.40007  6.42699  6.73856  2.64297 -0.195748  6.18320  4.76452  6.06893  6.51364  3.46873  2.00308  6.19738  4.49311  6.39245  6.81783  4.45290  1.17441  7.34927  6.78865  6.57835  7.61126  4.46648  2.43546  7.41525  7.47662  6.76790  7.59054  3.35870  1.30898  7.60319  6.71490  7.33027  6.94546  4.28330  2.19253  7.80760  7.49549  7.14663  6.79751  4.38629  1.22751  7.61336  6.74435  7.27666  6.98126  3.98529  1.63441  7.26680  6.10874  6.51375  6.98698  3.42334 0.689931  6.85051  8.15854  6.96605  7.48867  2.88534 0.804563  6.75230  6.25945  6.84400  6.80619  3.05699  1.62190  7.61268  7.95050  7.09214  5.84784  3.16771 -1.30641  7.31109  8.32666  6.76690  6.47896  3.58441 -0.161832  8.28238  9.07261  7.25142  6.68561  3.59104 0.511691  7.95466  8.47785  8.13263  7.40421  2.75558  1.18328  7.78843  8.93025  7.42155  7.21263  3.24545  1.86046  7.67359  8.05280  7.10599  7.18637  3.34575  2.09495  7.85477  8.83738  7.13399  7.55999  3.77552  2.25054  8.27781  8.68825  7.31763  7.67965  3.26577  2.14141  8.18581  9.55659  7.53829  7.20014  2.98007  1.89256  8.76715  9.80448  7.70300  7.03453  3.77694  1.46157  9.34504  8.39961  8.26067  7.12003  4.29510 0.104784  9.02967  6.54160  8.15189  6.49380  4.87580  2.30778  8.65896  8.60221  7.80159  7.40570  4.59101  2.89684  9.25902  8.68991  8.22618  7.40383  3.85798  2.01180  9.13862  8.81924  7.72794  7.01931 -1.04672 -0.291968 0.189144 -0.0234483 -1.83804 -0.119679 0.502881 0.809877 0.734231 0.973807 0.407668  1.04046 -0.998016  2.00251 0.340133 -0.179905 0.398233 -0.0963466 -0.991801 -0.0985549 0.686589  2.19553 -0.962627 0.142995 -0.184682  1.43585  1.76383 -1.16810 0.999579 0.0696827 0.578674 -2.66123 -1.42856 -0.403628 -0.0954577  1.02742 0.835459 0.641265 -1.33571 -0.701798 0.545398 -1.31925 -0.0139292 -0.712039 -0.448047  1.19517  1.15838 -2.10206 -0.712075 0.909815 -1.09427 -0.384392 0.0620984  1.38398 -1.16393 0.421551 -0.793994  1.08355 -0.277630 0.209025 -0.587951 -1.51153 0.818903 -1.02482  1.60944  1.60944  1.60944  1.60944  1.60944  1.60944
iter: 1  value: 64582.64 mgc: 1222.256 ustep: 1 
iter: 2  value: 63308.52 mgc: 1394.484 ustep: 1 
iter: 3  value: 63270.83 mgc: 90.58504 ustep: 1 
iter: 4  value: 63270.51 mgc: 12.04148 ustep: 1 
iter: 5  value: 63270.51 mgc: 0.3257629 ustep: 1 
iter: 6  value: 63270.51 mgc: 0.0004359527 ustep: 1 
iter: 7  mgc: 1.798428e-09 
iter: 1  value: 84589.35 mgc: 1844.256 ustep: 0.008923143 
iter: 2  value: 75315.77 mgc: 2666.845 ustep: 0.003097578 
iter: 3  value: 74233.64 mgc: 2028.841 ustep: 0.003577433 
iter: 4  value: 72778.61 mgc: 2615.061 ustep: 0.003851948 
iter: 5  value: 69239.41 mgc: 1803.844 ustep: 0.00200241 
iter: 6  value: 67418.11 mgc: 2486.637 ustep: 0.002862269 
iter: 7  value: 67367.79 mgc: 1345.282 ustep: 0.00343548 
iter: 8  value: 66546.67 mgc: 1409.572 ustep: 0.003772651 
iter: 9  value: 65303.18 mgc: 1447.385 ustep: 0.001981075 
iter: 10  value: 64825.67 mgc: 927.9875 ustep: 0.00568583 
iter: 11  value: 63518.98 mgc: 1089.453 ustep: 0.0754969 
iter: 12  value: 63103.04 mgc: 422.8817 ustep: 0.2748395 
iter: 13  value: 63035.12 mgc: 151.8681 ustep: 0.524299 
iter: 14  value: 63027.88 mgc: 12.42613 ustep: 0.7241125 
iter: 15  value: 63027.46 mgc: 0.5595686 ustep: 0.8509629 
iter: 16  value: 63027.45 mgc: 0.05560251 ustep: 0.9224843 
iter: 17  value: 63027.45 mgc: 0.003758543 ustep: 0.9604644 
iter: 18  value: 63027.45 mgc: 0.0001298343 ustep: 0.9800349 
iter: 19  value: 63027.45 mgc: 2.268569e-06 ustep: 0.9899681 
iter: 20  value: 63027.45 mgc: 1.996946e-08 ustep: 0.9949719 
iter: 21  mgc: 8.8201e-11 
iter: 1  mgc: 8.8201e-11 
outer mgc:  3944.55 
  1:     83486.812: 0.000970959 0.000442252 -5.55128 -7.81339 -6.30951 -6.71573 -4.97197 -5.36760 -5.58918 -7.31389 -6.56547 -6.09937 -4.99116 -4.95525 -5.91997 -7.17000 -6.80532 -6.27701 -5.08468 -5.05813 -5.77280 -7.10564 -7.02057 -5.78742 -5.19213 -4.94631 -6.09002 -5.99351 -6.29567 -5.81971 -5.10775 -4.84262 -5.67746 -6.15355 -6.41673 -5.55609 -5.16461 -5.23992 -5.93268 -6.98805 -5.68432 -5.53607 -5.12041 -4.88068 -5.70894 -6.88159 -5.63357 -5.95935 -5.11621 -5.12485 -5.65759 -7.57104 -5.93796 -6.15720 -5.22316 -5.06069 -5.97085 -7.00330 -5.96253 -5.56147 -5.34487 -5.13301 -6.14880 -6.64285 -5.75691 -5.31980 -5.30204 -5.33700 -5.90008 -6.92046 -5.78585 -5.36610 -5.48404 -5.04327 -6.10013 -8.57220 -5.37959 -5.05656 -5.53943 -5.20649 -6.10550 -10.1365 -5.19904 -5.10964 -5.00745 -5.23356 -6.11068 -7.64442 -5.10017 -5.15091 -5.17993 -5.21956 -5.73163 -7.34769 -5.26220 -5.10184 -5.26883 -5.24848 -6.12320 -7.33534 -5.38192 -5.35684 -5.27603 -5.12608 -5.83588 -7.61214 -5.32210 -5.23479 -5.12364 -5.18881 -6.02262 -8.72099 -5.25480 -5.30855 -5.19197 -5.21110 -6.22338 -7.18968 -5.30117 -4.92128 -5.16225 -5.02959 -5.58656 -6.13593 -5.11185 -4.95617 -5.15530 -5.24104 -5.40893 -7.53926 -4.96213 -5.19536 -5.18313 -5.33818 -5.73999 -9.94289 -5.05851 -5.58978 -5.17662 -5.33779 -6.19394 -7.11003 -5.29755 -5.23453 -5.29980 -5.07752 -5.73984 -6.43343 -5.14920 -5.03869 -5.02687 -5.03802 -5.98666 -9.04135 -5.04211 -5.18416 -5.20738 -5.29010  1.68900 0.844619 0.854267 0.506651 0.364702  1.26550 -2.16205  1.52544 0.00981912 -0.231477 -1.11561 0.552336 -0.197058 -0.934519  1.43348 -1.22711 0.148917  2.10799 -0.355559 -2.18339  1.43889 0.557643 -0.760891 0.765811 -1.06088 0.468327 0.756798 0.387617 -2.04401 0.607201 -1.02453 0.229636 0.597110  1.29620 -0.590229  1.13965 -1.61144 0.221861  1.19830 -0.494676  1.00195 0.808382 -0.358640 0.778965 -1.12574  1.51775 -0.568423 0.277328 0.977887 -1.24264 -1.23204 0.442056 0.788274 -1.45804 -0.226953 -0.270472 -1.64398 0.624419 -0.258591 -1.29019 0.0526459 0.278216 0.132763 -1.46300  3.26714  1.75497  6.32182  2.40013  6.42709  6.73858  2.64316 -0.195748  6.18340  4.76472  6.06945  6.51397  3.46873  2.00307  6.19752  4.49334  6.39283  6.81793  4.45268  1.17436  7.34925  6.78871  6.57860  7.61108  4.46636  2.43536  7.41518  7.47658  6.76799  7.59044  3.35877  1.30893  7.60312  6.71495  7.33052  6.94541  4.28323  2.19251  7.80743  7.49600  7.14668  6.79728  4.38601  1.22746  7.61326  6.74428  7.27675  6.98123  3.98512  1.63439  7.26710  6.10874  6.51394  6.98684  3.42340 0.689907  6.85075  8.15849  6.96603  7.48859  2.88552 0.804535  6.75225  6.25975  6.84405  6.80636  3.05701  1.62186  7.61278  7.95077  7.09223  5.84835  3.16803 -1.30640  7.31131  8.32699  6.76698  6.47900  3.58482 -0.161833  8.28242  9.07245  7.25177  6.68579  3.59115 0.511693  7.95477  8.47760  8.13228  7.40412  2.75582  1.18325  7.78854  8.92998  7.42140  7.21247  3.24550  1.86042  7.67351  8.05254  7.10582  7.18606  3.34597  2.09492  7.85470  8.83722  7.13378  7.55962  3.77545  2.25052  8.27762  8.68816  7.31763  7.67953  3.26589  2.14139  8.18562  9.55638  7.53823  7.19981  2.98049  1.89245  8.76712  9.80435  7.70289  7.03455  3.77732  1.46152  9.34496  8.39940  8.26015  7.11992  4.29502 0.104781  9.02945  6.54140  8.15157  6.49369  4.87537  2.30773  8.65874  8.60190  7.80139  7.40522  4.59060  2.89668  9.25860  8.68985  8.22575  7.40395  3.85776  2.01179  9.13831  8.81894  7.72774  7.01937 -1.04537 -0.294113 0.188444 -0.0243510 -1.83709 -0.119161 0.502121 0.809582 0.733036 0.973624 0.407523  1.04025 -0.996772  2.00196 0.339909 -0.180297 0.397769 -0.0953222 -0.990805 -0.0986041 0.686349  2.19377 -0.962305 0.142868 -0.185647  1.43530  1.76309 -1.16891  1.00015 0.0696168 0.578411 -2.66059 -1.42696 -0.403411 -0.0955019  1.02738 0.833879 0.641090 -1.33550 -0.701397 0.545721 -1.31896 -0.0138747 -0.711694 -0.447850  1.19363  1.15717 -2.09969 -0.710936 0.908885 -1.09318 -0.383880 0.0621322  1.38080 -1.16139 0.420415 -0.792294  1.08027 -0.276538 0.208147 -0.586145 -1.50709 0.816437 -1.02482 0.669071  1.34555 0.108616 0.0366532 -0.212457 -0.253352
iter: 1  value: 178521.9 mgc: 1909.565 ustep: 0.01776843 
iter: 2  value: 175604.8 mgc: 1684.754 ustep: 0.008904009 
iter: 3  value: 170240.6 mgc: 1684.555 ustep: 0.006179231 
iter: 4  value: 168458.1 mgc: 2035.403 ustep: 0.005107954 
iter: 5  value: 164219 mgc: 1568.508 ustep: 0.002316536 
iter: 6  value: 162262.5 mgc: 1082.552 ustep: 0.0244083 
iter: 7  value: 160421.9 mgc: 907.041 ustep: 0.01056305 
iter: 8  value: 159700.7 mgc: 1466.646 ustep: 0.1028664 
iter: 9  value: 158736.7 mgc: 864.8296 ustep: 0.006022322 
iter: 10  value: 157927.5 mgc: 1071.532 ustep: 0.07769586 
iter: 11  value: 156802.2 mgc: 190.4245 ustep: 0.2788119 
iter: 12  value: 155598.6 mgc: 56.62419 ustep: 0.5280736 
iter: 13  value: 154741.4 mgc: 50.9777 ustep: 0.7267141 
iter: 14  value: 154371.9 mgc: 12.69767 ustep: 0.85249 
iter: 15  value: 154270.1 mgc: 4.201434 ustep: 0.9233115 
iter: 16  value: 154248.6 mgc: 1.521593 ustep: 0.9608949 
iter: 17  value: 154245.8 mgc: 0.3217062 ustep: 0.9802545 
iter: 18  value: 154245.6 mgc: 0.0364185 ustep: 0.990079 
iter: 19  value: 154245.6 mgc: 0.003979825 ustep: 0.9950276 
iter: 20  value: 154245.6 mgc: 0.0002818559 ustep: 0.997511 
iter: 21  value: 154245.6 mgc: 1.448745e-05 ustep: 0.9987548 
iter: 22  value: 154245.6 mgc: 4.863098e-07 ustep: 0.9993773 
iter: 23  value: 154245.6 mgc: 1.211307e-08 ustep: 0.9996886 
iter: 24  mgc: 1.631306e-10 
iter: 1  value: 101119.9 mgc: 625.6874 ustep: 0.01776843 
iter: 2  value: 101110.3 mgc: 1738.355 ustep: 0.0177305 
iter: 3  value: 98090.8 mgc: 1196.671 ustep: 0.01771034 
iter: 4  value: 96726.55 mgc: 1648.042 ustep: 0.1331669 
iter: 5  value: 96352.26 mgc: 228.8959 ustep: 0.3649839 
iter: 6  value: 96293.81 mgc: 26.43136 ustep: 0.6041786 
iter: 7  value: 96286.9 mgc: 1.100811 ustep: 0.7773115 
iter: 8  value: 96286.44 mgc: 0.1478894 ustep: 0.8816646 
iter: 9  value: 96286.43 mgc: 0.02688786 ustep: 0.938976 
iter: 10  value: 96286.43 mgc: 0.002771214 ustep: 0.9690109 
iter: 11  value: 96286.43 mgc: 0.0001574617 ustep: 0.9843851 
iter: 12  value: 96286.43 mgc: 5.364945e-06 ustep: 0.9921626 
iter: 13  value: 96286.43 mgc: 9.53264e-08 ustep: 0.996074 
iter: 14  mgc: 8.930852e-10 
iter: 1  mgc: 8.930852e-10 
outer mgc:  2684.478 
  2:     81567.224: 0.00189595 0.000433500 -5.54966 -7.81420 -6.31015 -6.71666 -4.97111 -5.36813 -5.58591 -7.31691 -6.56824 -6.10037 -4.99062 -4.95502 -5.91732 -7.17243 -6.80637 -6.27708 -5.08445 -5.05826 -5.76812 -7.10775 -7.02069 -5.78647 -5.19064 -4.94742 -6.08630 -5.99408 -6.29368 -5.81909 -5.10592 -4.84241 -5.67437 -6.15567 -6.41710 -5.55496 -5.16371 -5.24168 -5.92930 -6.99086 -5.68155 -5.53382 -5.11806 -4.87979 -5.70245 -6.88457 -5.63038 -5.96075 -5.11267 -5.12566 -5.65199 -7.57295 -5.93836 -6.15897 -5.22101 -5.06091 -5.96843 -7.00620 -5.96449 -5.56147 -5.34422 -5.13258 -6.14731 -6.64589 -5.75870 -5.31878 -5.30155 -5.33731 -5.89699 -6.92332 -5.78900 -5.36564 -5.48377 -5.03852 -6.09829 -8.57339 -5.38064 -5.05327 -5.53963 -5.20377 -6.10300 -10.1369 -5.19932 -5.10586 -5.00600 -5.23443 -6.10924 -7.64863 -5.10053 -5.15029 -5.18111 -5.22065 -5.72824 -7.35116 -5.26492 -5.09983 -5.27110 -5.25098 -6.12087 -7.33844 -5.38341 -5.35595 -5.27807 -5.12604 -5.83149 -7.61558 -5.32428 -5.23288 -5.12407 -5.18934 -6.01944 -8.72243 -5.25562 -5.30713 -5.19405 -5.21109 -6.22105 -7.19482 -5.30397 -4.91303 -5.16355 -5.02575 -5.57791 -6.14407 -5.10919 -4.94500 -5.15640 -5.24270 -5.39779 -7.54423 -4.95502 -5.19090 -5.18608 -5.34189 -5.73551 -9.94329 -5.05548 -5.59249 -5.17827 -5.34110 -6.19026 -7.11429 -5.29661 -5.23106 -5.30257 -5.07522 -5.73432 -6.44069 -5.14878 -5.03367 -5.02446 -5.03487 -5.98231 -9.04243 -5.03796 -5.18206 -5.20802 -5.28971  1.95131 0.643277 0.467422 0.513675 0.379008  1.27335 -2.03804  1.76306 0.146684 -0.595721 -1.11596 0.549797 -0.199426 -0.928583  1.43650 -1.22700 0.148160  2.10681 -0.353090 -2.18128  1.44488 0.634031 -0.795618 0.817401 -1.04650 0.436614 0.788509 0.411339 -2.08264 0.630631 -1.04031 0.233844 0.607183  1.31132 -0.598376  1.16094 -1.61583 0.235199  1.20253 -0.503792  1.04360 0.837512 -0.349798 0.779373 -1.12510  1.52180 -0.572459 0.282092 0.978402 -1.24191 -1.23012 0.442944 0.783685 -1.45284 -0.225605 -0.271236 -1.64323 0.617254 -0.255605 -1.28793 0.0515591 0.276447 0.132624 -1.81511  3.26699  1.75496  6.32368  2.40175  6.42961  6.73810  2.64365 -0.195771  6.18540  4.76755  6.07796  6.51788  3.46836  2.00303  6.19871  4.49863  6.39608  6.82047  4.45203  1.17425  7.34866  6.78874  6.58185  7.60904  4.46587  2.43507  7.41413  7.47525  6.76890  7.58869  3.35887  1.30876  7.60172  6.71675  7.33485  6.94617  4.28284  2.19245  7.80474  7.50671  7.14861  6.79588  4.38481  1.22731  7.61197  6.74064  7.28110  6.97941  3.98420  1.63432  7.26965  6.10704  6.52029  6.98344  3.42356 0.689824  6.85429  8.15448  6.96438  7.48556  2.88669 0.804439  6.75098  6.26778  6.84533  6.81094  3.05672  1.62173  7.61092  7.95827  7.09166  5.86552  3.16965 -1.30640  7.31461  8.32927  6.77007  6.48054  3.58643 -0.161840  8.28078  9.06895  7.26275  6.69537  3.59132 0.511634  7.96038  8.47337  8.11857  7.40505  2.75668  1.18316  7.79216  8.92087  7.41833  7.20792  3.24523  1.86030  7.67336  8.04820  7.10638  7.17826  3.34626  2.09483  7.85462  8.83475  7.13020  7.55074  3.77439  2.25050  8.27533  8.68935  7.31466  7.67588  3.26676  2.14132  8.18234  9.55644  7.53562  7.19832  2.98310  1.89196  8.76646  9.80911  7.70292  7.03513  3.77880  1.46140  9.34449  8.39620  8.24958  7.11679  4.29409 0.104775  9.02657  6.53824  8.14961  6.49331  4.87346  2.30754  8.65677  8.59969  7.79924  7.39474  4.58867  2.89630  9.25274  8.68527  8.21631  7.40467  3.85662  2.01176  9.13691  8.81378  7.72601  7.02089 -1.04432 -0.294116 0.186904 -0.0212207 -1.83856 -0.117297 0.504993 0.807416 0.733566 0.979404 0.408865  1.03939 -0.995388  2.00395 0.339573 -0.175034 0.394506 -0.0925504 -0.980972 -0.0993586 0.729988  2.17329 -0.961252 0.142131 -0.204628  1.44544  1.75951 -1.21385  1.04874 0.0429063 0.594049 -2.69055 -1.40427 -0.418041 -0.111618  1.06995 0.796021 0.673486 -1.36696 -0.722080 0.598948 -1.37395 -0.0125365 -0.711408 -0.447894  1.19605  1.15836 -2.10377 -0.723268 0.938846 -1.13214 -0.409662 0.0778461  1.41039 -1.18408 0.424730 -0.833687  1.10149 -0.253062 0.183407 -0.604073 -1.56278 0.840884 -1.67494 0.327938  1.19058 0.143879 0.631390 0.416309 0.769486
iter: 1  value: 129864.2 mgc: 751.5881 ustep: 0.4367355 
iter: 2  value: 129242.6 mgc: 1192.846 ustep: 0.6608936 
iter: 3  value: 126817 mgc: 589.3424 ustep: 0.01300188 
iter: 4  